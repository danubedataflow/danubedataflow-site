#!/usr/bin/env perl
use ScriptTools::features;
use ScriptTools::JSON;
use Path::Tiny;
use open qw(:std :utf8);

# Assuming there are JSON files named after locales like path/to/lang-en.json,
# path/to/lang-ja.json etc., use
#
#     ./bin/assemble-i18n-dicts **/lang-??.json >src/js/i18n-dicts.js
#
# Dictionaries with the same locale will be merged. This makes it possible to
# define longer or one-off translations in the directory where they belong, and
# they don't clutter up the main dictionaries in etc/. The per-dir JSON files
# will be ignored in ttreerc.
my $combined = {};
for my $filename (@ARGV) {
    my $p      = path($filename);
    my $locale = $p->basename('.json') =~ s/^lang-//r;    # 'lang-ja.json' => 'ja'
    my $data   = json_decode($p->slurp_utf8);
    $combined->{$locale} //= {};
    $combined->{$locale}->%* = ($combined->{$locale}->%*, $data->%*);
}
my $json = json_encode($combined);
1 while chomp $json;
my $js = <<~EOJS;
    // Do not edit this file; it was assembled from the raw dictionaries.

    const translations = $json;
    EOJS
say $js;
